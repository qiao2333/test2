<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.CardMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Card" >
    <id column="CardNo" property="cardno" jdbcType="BIGINT" />
    <result column="CardName" property="cardname" jdbcType="VARCHAR" />
    <result column="BorrowNumber" property="borrownumber" jdbcType="INTEGER" />
    <result column="Adate" property="adate" jdbcType="DATE" />
    <result column="Phone" property="phone" jdbcType="VARCHAR" />
    <result column="Mail" property="mail" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CardNo, CardName, BorrowNumber, Adate, Phone, Mail
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pojo.CardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from card
    where CardNo = #{cardno,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from card
    where CardNo = #{cardno,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pojo.CardExample" >
    delete from card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pojo.Card" >
    insert into card (CardNo, CardName, BorrowNumber, 
      Adate, Phone, Mail)
    values (#{cardno,jdbcType=BIGINT}, #{cardname,jdbcType=VARCHAR}, #{borrownumber,jdbcType=INTEGER}, 
      #{adate,jdbcType=DATE}, #{phone,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Card" >
    insert into card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cardno != null" >
        CardNo,
      </if>
      <if test="cardname != null" >
        CardName,
      </if>
      <if test="borrownumber != null" >
        BorrowNumber,
      </if>
      <if test="adate != null" >
        Adate,
      </if>
      <if test="phone != null" >
        Phone,
      </if>
      <if test="mail != null" >
        Mail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cardno != null" >
        #{cardno,jdbcType=BIGINT},
      </if>
      <if test="cardname != null" >
        #{cardname,jdbcType=VARCHAR},
      </if>
      <if test="borrownumber != null" >
        #{borrownumber,jdbcType=INTEGER},
      </if>
      <if test="adate != null" >
        #{adate,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pojo.CardExample" resultType="java.lang.Integer" >
    select count(*) from card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update card
    <set >
      <if test="record.cardno != null" >
        CardNo = #{record.cardno,jdbcType=BIGINT},
      </if>
      <if test="record.cardname != null" >
        CardName = #{record.cardname,jdbcType=VARCHAR},
      </if>
      <if test="record.borrownumber != null" >
        BorrowNumber = #{record.borrownumber,jdbcType=INTEGER},
      </if>
      <if test="record.adate != null" >
        Adate = #{record.adate,jdbcType=DATE},
      </if>
      <if test="record.phone != null" >
        Phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null" >
        Mail = #{record.mail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update card
    set CardNo = #{record.cardno,jdbcType=BIGINT},
      CardName = #{record.cardname,jdbcType=VARCHAR},
      BorrowNumber = #{record.borrownumber,jdbcType=INTEGER},
      Adate = #{record.adate,jdbcType=DATE},
      Phone = #{record.phone,jdbcType=VARCHAR},
      Mail = #{record.mail,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Card" >
    update card
    <set >
      <if test="cardname != null" >
        CardName = #{cardname,jdbcType=VARCHAR},
      </if>
      <if test="borrownumber != null" >
        BorrowNumber = #{borrownumber,jdbcType=INTEGER},
      </if>
      <if test="adate != null" >
        Adate = #{adate,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        Phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        Mail = #{mail,jdbcType=VARCHAR},
      </if>
    </set>
    where CardNo = #{cardno,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Card" >
    update card
    set CardName = #{cardname,jdbcType=VARCHAR},
      BorrowNumber = #{borrownumber,jdbcType=INTEGER},
      Adate = #{adate,jdbcType=DATE},
      Phone = #{phone,jdbcType=VARCHAR},
      Mail = #{mail,jdbcType=VARCHAR}
    where CardNo = #{cardno,jdbcType=BIGINT}
  </update>
</mapper>